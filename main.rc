
# awkfind [awk command] [find arguments]
# awk command only exists if there are more than 2 arguments 
# awkfind [awk expression [path] [find args]]
# if something funky is happening, set DEBUG so that you know what is passed where

~ $#* 0 && exec find $PWD

PWD=`{ pwd } # JIC
nl=$ifs(3)

~ $#* 0 || { awkargs=$1; shift }
~ $#* 0 || {
 if (test -e $1) { dir=$1 } else { args=$1 }
 shift
}
~ $#* 0 || { args=($args $*); *=() }
~ $#dir 0 && dir=.


ifs=() { # stat does not output the fullpath, so we always get the full path
 dir=`{ realpath $dir | awk '# gets everything but the last character
  BEGIN{RS=ORS="\x00"}
  { printf("%s", substr($0, 1, length($0)-1 ) ) }
 '}
}
# realpath $nl$nl | lua -e 'io.write(io.read"*a":sub(1,-2))'

~ $#DEBUG 0 || {
 echo awkargs: $awkargs
 echo dir: $dir
 echo args: $args
 echo
 exit
}

# gnu stat uses printf, and you can pass '\x00'
#stat=(busybox stat --printf^'='^$format^'\x00')

# freebsd stat uses -f instead of -c
#stat=(stat -n -f $format) # unsupported for now

stat=(busybox stat -c $format)

fn awk { builtin awk $awkmodule^$nl^$awkargs }

fn usewalk {
 { walk -0 $dir | xargs -0 $stat } >[2] /dev/null | awk
}

fn usefind {
 # -print0 for find?
 args=($dir $args -exec $stat '{}' + )
 find $args >[2] /dev/null | awk
}

if (whatis -p walk > /dev/null >[2=1]) {
 ~ $#args 0 && usewalk || usefind
} else {
 usefind
}
